name: Android CI

on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build apk with Gradle
      run: ./gradlew clean && ./gradlew app:assembleRelease

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: 添加朋友
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk

      # 创建realease
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.TOKEN }}
      # 上传apk到release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        upload_url: ${{ steps.create_release.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: 添加朋友.apk
        asset_content_type: application/vnd.android.package-archiv
      #上传到蒲公英
    - name: Upload File to Pgyer
      run: curl -F 'file=@${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk' -F "_api_key=${{ secrets.PGYER_API_KEY }}" -F "uKey=${{ secrets.PGYER_USER_KEY }}" -F "buildInstallType=3" https://www.pgyer.com/apiv2/app/upload

